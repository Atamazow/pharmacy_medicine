{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  totalPrice: 0,\n  items: []\n};\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItems(state, action) {\n      const findItem = state.items.find(item => item.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.count * obj.price + sum;\n      }, 0);\n    },\n    minusItem(state, action) {\n      const findItem = state.items.find(item => item.id === action.payload);\n      if (findItem) {\n        findItem.count--;\n      }\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n    clearItem(state, action) {\n      state.items = [];\n      state.totalPrice = 0;\n    }\n  }\n});\nexport const {\n  addItems,\n  removeItem,\n  clearItem,\n  minusItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","totalPrice","items","cartSlice","name","reducers","addItems","state","action","findItem","find","item","id","payload","count","push","reduce","sum","obj","price","minusItem","removeItem","filter","clearItem","actions","reducer"],"sources":["D:/новый код/проекты/farmacy/src/redux/slices/cartSlice.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  totalPrice: 0,\n  items: [],\n};\n\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItems(state, action) {\n      const findItem = state.items.find(\n        (item) => item.id === action.payload.id,\n      );\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1,\n        });\n      }\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.count * obj.price + sum;\n      }, 0);\n    },\n    minusItem(state, action) {\n      const findItem = state.items.find((item) => item.id === action.payload);\n      if (findItem) {\n        findItem.count--;\n      }\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\n    },\n    clearItem(state, action) {\n      state.items = [];\n      state.totalPrice = 0;\n    },\n  },\n});\n\nexport const { addItems, removeItem, clearItem, minusItem } = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtB,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAC9BC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CACxC;MACD,IAAIH,QAAQ,EAAE;QACZA,QAAQ,CAACK,KAAK,EAAE;MAClB,CAAC,MAAM;QACLP,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UACf,GAAGP,MAAM,CAACK,OAAO;UACjBC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;MACAP,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,KAAK,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;QAClD,OAAOA,GAAG,CAACJ,KAAK,GAAGI,GAAG,CAACC,KAAK,GAAGF,GAAG;MACpC,CAAC,EAAE,CAAC,CAAC;IACP,CAAC;IACDG,SAAS,CAACb,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;MACvE,IAAIJ,QAAQ,EAAE;QACZA,QAAQ,CAACK,KAAK,EAAE;MAClB;IACF,CAAC;IACDO,UAAU,CAACd,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACoB,MAAM,CAAEJ,GAAG,IAAKA,GAAG,CAACN,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;IACtE,CAAC;IACDU,SAAS,CAAChB,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACL,KAAK,GAAG,EAAE;MAChBK,KAAK,CAACN,UAAU,GAAG,CAAC;IACtB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,QAAQ;EAAEe,UAAU;EAAEE,SAAS;EAAEH;AAAU,CAAC,GAAGjB,SAAS,CAACqB,OAAO;AAE/E,eAAerB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}