{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalPrice: 0,\n  items: []\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItems(state, action) {\n      const findItem = state.items.find(item => item.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        console.log(sum + obj.price);\n        return obj.price + sum;\n      }, 0);\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n    clearItem(state, action) {\n      state.items = [];\n    }\n  }\n});\nexport const {\n  addItems,\n  removeItem,\n  clearItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","totalPrice","items","cartSlice","name","reducers","addItems","state","action","findItem","find","item","id","payload","count","push","reduce","sum","obj","console","log","price","removeItem","filter","clearItem","actions","reducer"],"sources":["C:/Users/User/Desktop/проекты/farmacy/src/redux/slices/cartSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  totalPrice: 0,\n  items: [],\n};\n\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItems(state, action) {\n       const findItem = state.items.find(item => item.id === action.payload.id)\n      if(findItem) {\n        findItem.count++\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        })\n      }\n       state.totalPrice = state.items.reduce((sum,obj) => {\n         console.log(sum + obj.price)\n        return obj.price + sum\n      },0)\n    },\n    removeItem(state,action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload)\n    },\n    clearItem(state,action) {\n      state.items = []\n    }\n  },\n});\n\nexport const { addItems,removeItem,clearItem } = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACzE,IAAGH,QAAQ,EAAE;QACXA,QAAQ,CAACK,KAAK,EAAE;MAClB,CAAC,MAAM;QACLP,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UACf,GAAGP,MAAM,CAACK,OAAO;UACjBC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;MACCP,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,KAAK,CAACc,MAAM,CAAC,CAACC,GAAG,EAACC,GAAG,KAAK;QACjDC,OAAO,CAACC,GAAG,CAACH,GAAG,GAAGC,GAAG,CAACG,KAAK,CAAC;QAC7B,OAAOH,GAAG,CAACG,KAAK,GAAGJ,GAAG;MACxB,CAAC,EAAC,CAAC,CAAC;IACN,CAAC;IACDK,UAAU,CAACf,KAAK,EAACC,MAAM,EAAE;MACvBD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACqB,MAAM,CAACL,GAAG,IAAIA,GAAG,CAACN,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;IACpE,CAAC;IACDW,SAAS,CAACjB,KAAK,EAACC,MAAM,EAAE;MACtBD,KAAK,CAACL,KAAK,GAAG,EAAE;IAClB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,QAAQ;EAACgB,UAAU;EAACE;AAAU,CAAC,GAAGrB,SAAS,CAACsB,OAAO;AAElE,eAAetB,SAAS,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}