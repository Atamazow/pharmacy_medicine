{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { logDOM } from \"@testing-library/react\";\nconst initialState = {\n  medicine: [],\n  status: false\n};\nexport const fetchMedicine = createAsyncThunk('fetch/Medicine', async (categoryId, search) => {\n  console.log(search);\n  const {\n    data\n  } = await axios.get(`https://6368ce8715219b84960742ec.mockapi.io/medicine?${categoryId}${search}`);\n  return data;\n});\nexport const medicineSlice = createSlice({\n  name: \"medicine\",\n  initialState,\n  reducers: {\n    getMedicine: (state, action) => {\n      state.medicine = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchMedicine.fulfilled, (state, action) => {\n      state.medicine = action.payload;\n    });\n  }\n});\nexport const {\n  getMedicine\n} = medicineSlice.actions;\nexport default medicineSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","logDOM","initialState","medicine","status","fetchMedicine","categoryId","search","console","log","data","get","medicineSlice","name","reducers","getMedicine","state","action","payload","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["C:/Users/User/Desktop/проекты/farmacy/src/redux/slices/medicineSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport {logDOM} from \"@testing-library/react\";\n\nconst initialState = {\n  medicine: [],\n  status: false,\n};\n\nexport const fetchMedicine = createAsyncThunk('fetch/Medicine',async (categoryId,search) => {\n  console.log(search)\n  \n  const { data } = await axios.get(\n    `https://6368ce8715219b84960742ec.mockapi.io/medicine?${categoryId}${search}`\n  );\n  return data;\n});\n\nexport const medicineSlice = createSlice({\n  name: \"medicine\",\n  initialState,\n  reducers: {\n    getMedicine: (state, action) => {\n        state.medicine = action.payload\n    },\n  },\n  extraReducers:(builder => {\n    builder.addCase(fetchMedicine.fulfilled,(state,action) => {\n      state.medicine = action.payload\n    })\n  } )\n});\n\nexport const { getMedicine } = medicineSlice.actions;\n\nexport default medicineSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,wBAAwB;AAE7C,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGN,gBAAgB,CAAC,gBAAgB,EAAC,OAAOO,UAAU,EAACC,MAAM,KAAK;EAC1FC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EAEnB,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC7B,wDAAuDL,UAAW,GAAEC,MAAO,EAAC,CAC9E;EACD,OAAOG,IAAI;AACb,CAAC,CAAC;AAEF,OAAO,MAAME,aAAa,GAAGd,WAAW,CAAC;EACvCe,IAAI,EAAE,UAAU;EAChBX,YAAY;EACZY,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACb,QAAQ,GAAGc,MAAM,CAACC,OAAO;IACnC;EACF,CAAC;EACDC,aAAa,EAAEC,OAAO,IAAI;IACxBA,OAAO,CAACC,OAAO,CAAChB,aAAa,CAACiB,SAAS,EAAC,CAACN,KAAK,EAACC,MAAM,KAAK;MACxDD,KAAK,CAACb,QAAQ,GAAGc,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAY,CAAC,GAAGH,aAAa,CAACW,OAAO;AAEpD,eAAeX,aAAa,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}