{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalPrice: 0,\n  items: []\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItems(state, action) {\n      const findItem = state.items.find(item => item.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.count * obj.price + sum;\n      }, 0);\n    },\n    minusItem(state, action) {\n      const findItem = state.items.find(item => item.id === action.payload);\n      if (findItem) {\n        findItem.count--;\n      }\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n    clearItem(state, action) {\n      state.items = [];\n      state.totalPrice = 0;\n    }\n  }\n});\nexport const {\n  addItems,\n  removeItem,\n  clearItem,\n  minusItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","totalPrice","items","cartSlice","name","reducers","addItems","state","action","findItem","find","item","id","payload","count","push","reduce","sum","obj","price","minusItem","removeItem","filter","clearItem","actions","reducer"],"sources":["C:/Users/User/Desktop/проекты/farmacy/src/redux/slices/cartSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  totalPrice: 0,\n  items: [],\n};\n\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItems(state, action) {\n       const findItem = state.items.find(item => item.id === action.payload.id)\n      if(findItem) {\n        findItem.count++\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        })\n      }\n       state.totalPrice = state.items.reduce((sum,obj) => {\n        return obj.count * obj.price + sum\n      },0)\n    },\n    minusItem(state,action) {\n      const findItem = state.items.find(item => item.id === action.payload)\n      if(findItem) {\n        findItem.count--\n      }\n     },\n    removeItem(state,action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload)\n    },\n    clearItem(state,action) {\n      state.items = []\n      state.totalPrice = 0\n    }\n  },\n});\n\nexport const { addItems,removeItem,clearItem,minusItem } = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACzE,IAAGH,QAAQ,EAAE;QACXA,QAAQ,CAACK,KAAK,EAAE;MAClB,CAAC,MAAM;QACLP,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UACf,GAAGP,MAAM,CAACK,OAAO;UACjBC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;MACCP,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,KAAK,CAACc,MAAM,CAAC,CAACC,GAAG,EAACC,GAAG,KAAK;QAClD,OAAOA,GAAG,CAACJ,KAAK,GAAGI,GAAG,CAACC,KAAK,GAAGF,GAAG;MACpC,CAAC,EAAC,CAAC,CAAC;IACN,CAAC;IACDG,SAAS,CAACb,KAAK,EAACC,MAAM,EAAE;MACtB,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;MACrE,IAAGJ,QAAQ,EAAE;QACXA,QAAQ,CAACK,KAAK,EAAE;MAClB;IACD,CAAC;IACFO,UAAU,CAACd,KAAK,EAACC,MAAM,EAAE;MACvBD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACoB,MAAM,CAACJ,GAAG,IAAIA,GAAG,CAACN,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;IACpE,CAAC;IACDU,SAAS,CAAChB,KAAK,EAACC,MAAM,EAAE;MACtBD,KAAK,CAACL,KAAK,GAAG,EAAE;MAChBK,KAAK,CAACN,UAAU,GAAG,CAAC;IACtB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,QAAQ;EAACe,UAAU;EAACE,SAAS;EAACH;AAAU,CAAC,GAAGjB,SAAS,CAACqB,OAAO;AAE5E,eAAerB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}