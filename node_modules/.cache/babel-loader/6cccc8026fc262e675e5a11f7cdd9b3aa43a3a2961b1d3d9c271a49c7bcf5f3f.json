{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  medicine: [],\n  status: false\n};\nexport const medicineSlice = createSlice({\n  name: 'medicine',\n  initialState,\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","medicine","status","medicineSlice","name","reducers","increment","state","value","decrement","incrementByAmount","action","payload","counterSlice","actions","reducer"],"sources":["C:/Users/User/Desktop/farmacy/src/redux/medicineSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    medicine: [],\r\n    status: false\r\n}\r\n\r\nexport const medicineSlice = createSlice({\r\n    name: 'medicine',\r\n    initialState,\r\n    reducers: {\r\n        increment: (state) => {\r\n            // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n            // doesn't actually mutate the state because it uses the Immer library,\r\n            // which detects changes to a \"draft state\" and produces a brand new\r\n            // immutable state based off those changes\r\n            state.value += 1\r\n        },\r\n        decrement: (state) => {\r\n            state.value -= 1\r\n        },\r\n        incrementByAmount: (state, action) => {\r\n            state.value += action.payload\r\n        },\r\n    },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\r\n\r\nexport default counterSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGJ,WAAW,CAAC;EACrCK,IAAI,EAAE,UAAU;EAChBJ,YAAY;EACZK,QAAQ,EAAE;IACNC,SAAS,EAAGC,KAAK,IAAK;MAClB;MACA;MACA;MACA;MACAA,KAAK,CAACC,KAAK,IAAI,CAAC;IACpB,CAAC;IACDC,SAAS,EAAGF,KAAK,IAAK;MAClBA,KAAK,CAACC,KAAK,IAAI,CAAC;IACpB,CAAC;IACDE,iBAAiB,EAAE,CAACH,KAAK,EAAEI,MAAM,KAAK;MAClCJ,KAAK,CAACC,KAAK,IAAIG,MAAM,CAACC,OAAO;IACjC;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEN,SAAS;EAAEG,SAAS;EAAEC;AAAkB,CAAC,GAAGG,YAAY,CAACC,OAAO;AAE/E,eAAeD,YAAY,CAACE,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}